$date
	Thu Aug 17 10:53:00 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module Q3_tb $end
$var wire 1 ! carryout $end
$var wire 4 " S [3:0] $end
$var reg 4 # X [3:0] $end
$var reg 4 $ Y [3:0] $end
$var reg 1 % ctrl $end
$scope module q3 $end
$var wire 4 & X [3:0] $end
$var wire 4 ' Y [3:0] $end
$var wire 1 % ctrl $end
$var wire 1 ! carryout $end
$var wire 4 ( Yc [3:0] $end
$var wire 4 ) S [3:0] $end
$var wire 3 * C [3:1] $end
$scope module s0 $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 , s $end
$var wire 1 - x $end
$var wire 1 . y $end
$upscope $end
$scope module s1 $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 s $end
$var wire 1 2 x $end
$var wire 1 3 y $end
$upscope $end
$scope module s2 $end
$var wire 1 4 cin $end
$var wire 1 5 cout $end
$var wire 1 6 s $end
$var wire 1 7 x $end
$var wire 1 8 y $end
$upscope $end
$scope module s3 $end
$var wire 1 9 cin $end
$var wire 1 ! cout $end
$var wire 1 : s $end
$var wire 1 ; x $end
$var wire 1 < y $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
1-
1,
0+
b0 *
b1 )
b0 (
b0 '
b1 &
0%
b0 $
b1 #
b1 "
0!
$end
#3
16
18
0,
b110 "
b110 )
11
b100 (
0-
12
b100 $
b100 '
b10 #
b10 &
#6
14
10
1/
1+
1:
19
b111 *
15
08
13
1.
0,
01
b1000 "
b1000 )
06
b11 (
1-
02
17
b11 $
b11 '
b101 #
b101 &
#9
19
15
06
14
0:
1!
01
b111 *
10
1<
18
13
1.
07
b1111 (
b1 "
b1 )
1,
b0 $
b0 '
b1 #
b1 &
1%
#12
0/
b110 *
0+
0.
1,
b1 "
b1 )
01
b1110 (
0-
12
b1 $
b1 '
b10 #
b10 &
#15
